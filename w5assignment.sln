#include <iostream>
#include <fstream>
using namespace std;
const float pi = 3.141592;
int main() {
	int *n;
	float *f, samples[200];
	short* p, * a, * d1, *d2;
	char header[12];  //sprint1-1
	n = (int*)header;
	*n = 500;
	f = (float*)(header + 4);
	*f = 1000;
	p = (short*)(header + 10);
	*p = 12;
	a = (short*)(header + 8);
	*a = 15000;

	d1 = new short[*n];
	float dt1 = 1. / f[0] / 20.0;
	for (int i = 0; i < n[0]; i++) {  //sprint3-1
		d1[i] = short(a[0] * sin(2.0 * pi * f[0] * i * dt1));
	}
	cout << d1[2] << endl;

	ofstream xx("a.dat", ios::binary | ios::out);  //sprint1-2
	if (!xx) return 666; 
	xx.write(header, 12 * sizeof(char));
	xx.write((char *)d1, n[0] * sizeof(short));
	xx.close();

	ifstream xxx("a.dat", ios::binary | ios::in);
	if (!xxx) return 666;
	xxx.read(header, 12 * sizeof(char));  //sprint2-1
	cout << "n" << * n << endl;  //sprint2-2
	cout << "f" << * f << endl;
	cout << "p" << * p << endl;
	cout << "a" << * a << endl;
	xxx.close();

	ofstream yy("a.dat", ios::binary | ios::out);
	if (!yy) return 666;
	*f = 700.0;  //sprint2-3
	yy.close();

	d2 = new short[*n];
	ifstream aa("a.dat", ios::binary | ios::in);
	if (!xxx) return 666;
	aa.read(header, 12 * sizeof(char));
	cout << f[0] << endl;
	float dt2 = 1. / f[0] / 20.0;
	for (int i = 0; i < n[0]; i++) {  //sprint3-1
		d2[i] = short(a[0] * sin(2.0 * pi * f[0] * i * dt2));
	}
	cout << d2[2] << endl;
	ofstream yyy("b.dat", ios::binary | ios::out);  //sprint3-2
	if (!yyy) return 666;
	yyy.write((char *)d2, n[0] * sizeof(short));
	aa.close();
	yyy.close();

	ofstream aaa("a.dat", ios::binary | ios::out);
	if (!yy) return 666;
	aaa.write((char*)d1, n[0] * sizeof(short));
	aaa.close();

	short *data1, *data2;
	data1 = new short[*n];
	data2 = new short[*n];
	ifstream z("a.dat", ios::binary | ios::in);  //sprint4
	if (!z) return 666;
	z.read((char*)data1, n[0] * sizeof(short));
	ifstream zz("b.dat", ios::binary | ios::in);
	if (!zz) return 666;
	zz.read((char*)data2, n[0] * sizeof(short));
	z.close();
	zz.close();
	ofstream zzz("c.txt");
	if (!zzz) return 666;
	for (int i = 0; i < n[0]; i++) {
		zzz << i*dt1 << " " << data1[i] << " " << i*dt2 << " " << data2[i] << endl;
	}
	zzz.close();
}
